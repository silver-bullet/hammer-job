{
    "openapi": "3.0.0",
    "info": {
        "title": "MyHammer Jobs API",
        "version": "1.0"
    },
    "paths": {
        "/api/category": {
            "get": {
                "tags": [
                    "Category Entity"
                ],
                "summary": "List Services/Categories",
                "description": "use this API endpoint to list all categories/services",
                "operationId": "ListCategory",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/paginate"
                    },
                    {
                        "$ref": "#/components/parameters/per_page"
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/category_with"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CategoryListingResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/DatabaseErrorResponse"
                    }
                }
            }
        },
        "/api/category/filter": {
            "post": {
                "tags": [
                    "Category Entity"
                ],
                "summary": "Filter Services/Categories",
                "description": "Use this API endpoint to filter categories/services based on category attributes",
                "operationId": "FilterCategory",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/paginate"
                    },
                    {
                        "$ref": "#/components/parameters/per_page"
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/category_with"
                    },
                    {
                        "$ref": "#/components/parameters/query"
                    },
                    {
                        "$ref": "#/components/parameters/conditions"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CategoryListingResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/DatabaseErrorResponse"
                    }
                }
            }
        },
        "/api/job/{id}": {
            "get": {
                "tags": [
                    "Job Entity"
                ],
                "summary": "Show A Job",
                "description": "use this API endpoint to retrieve single job based on its ID.",
                "operationId": "ShowJob",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ID"
                    },
                    {
                        "$ref": "#/components/parameters/job_with"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/JobEntityResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundErrorResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/DatabaseErrorResponse"
                    }
                }
            },
            "put": {
                "tags": [
                    "Job Entity"
                ],
                "summary": "Update Job",
                "description": "use this endpoint to update an existing job resource",
                "operationId": "updateJob",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ID"
                    },
                    {
                        "$ref": "#/components/parameters/job_with"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/StoreOrUpdateJobRequestBody"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/JobEntityResponse"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFoundErrorResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/ValidationErrorResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/DatabaseErrorResponse"
                    }
                }
            }
        },
        "/api/job": {
            "get": {
                "tags": [
                    "Job Entity"
                ],
                "summary": "List Jobs",
                "description": "use this API endpoint to list all jobs up to last 30 days.",
                "operationId": "ListJob",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/paginate"
                    },
                    {
                        "$ref": "#/components/parameters/per_page"
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/job_with"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/JobListingResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/DatabaseErrorResponse"
                    }
                }
            },
            "post": {
                "tags": [
                    "Job Entity"
                ],
                "summary": "Store Job",
                "description": "use this endpoint to store a new job resource into data layer",
                "operationId": "storeJob",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/job_with"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/StoreOrUpdateJobRequestBody"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/JobEntityResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/ValidationErrorResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/DatabaseErrorResponse"
                    }
                }
            }
        },
        "/api/job/filter": {
            "post": {
                "tags": [
                    "Job Entity"
                ],
                "summary": "Filter Jobs",
                "description": "Use this API endpoint to filter jobs based on job attributes",
                "operationId": "FilterJob",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/paginate"
                    },
                    {
                        "$ref": "#/components/parameters/per_page"
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/job_with"
                    },
                    {
                        "$ref": "#/components/parameters/query"
                    },
                    {
                        "$ref": "#/components/parameters/conditions"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/JobListingResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/DatabaseErrorResponse"
                    }
                }
            }
        },
        "/api/zip-code/filter": {
            "post": {
                "tags": [
                    "ZipCode Entity"
                ],
                "summary": "Filter Zip Codes",
                "description": "Use this API endpoint to filter zip codes based on zip code attributes",
                "operationId": "FilterZipCode",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/paginate"
                    },
                    {
                        "$ref": "#/components/parameters/per_page"
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/zipcode_with"
                    },
                    {
                        "$ref": "#/components/parameters/query"
                    },
                    {
                        "$ref": "#/components/parameters/conditions"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/ZipCodeListingResponse"
                    },
                    "500": {
                        "$ref": "#/components/responses/DatabaseErrorResponse"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Category": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "code": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "jobs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Job"
                        }
                    }
                },
                "type": "object"
            },
            "City": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Job": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "delivery_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "category": {
                        "type": "object",
                        "$ref": "#/components/schemas/Category"
                    },
                    "zip_code": {
                        "type": "object",
                        "$ref": "#/components/schemas/ZipCode"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "JobListing": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/JobListingWithPagination"
                    },
                    {
                        "$ref": "#/components/schemas/JobListingWithoutPagination"
                    }
                ]
            },
            "JobListingWithPagination": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Job"
                        }
                    }
                },
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/LaravelPagination"
                    }
                ]
            },
            "JobListingWithoutPagination": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Job"
                }
            },
            "StoreOrUpdateJob": {
                "required": [
                    "title",
                    "description",
                    "delivery_date",
                    "category_id",
                    "zipcode_id"
                ],
                "properties": {
                    "title": {
                        "type": "string",
                        "example": "transfer job"
                    },
                    "description": {
                        "type": "string",
                        "example": "I need to transfer some products from building..."
                    },
                    "delivery_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2018-08-10"
                    },
                    "category_id": {
                        "description": "Category ID",
                        "type": "integer",
                        "example": "1"
                    },
                    "zipcode_id": {
                        "description": "ZipCode ID",
                        "type": "integer",
                        "example": "2"
                    }
                },
                "type": "object"
            },
            "ZipCode": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "code": {
                        "type": "integer"
                    },
                    "city": {
                        "type": "object",
                        "$ref": "#/components/schemas/City"
                    },
                    "jobs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Job"
                        }
                    }
                },
                "type": "object"
            },
            "ValidationError": {
                "properties": {
                    "error": {
                        "type": "string",
                        "default": "ValidationError"
                    },
                    "messages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "NotFoundError": {
                "properties": {
                    "error": {
                        "type": "string",
                        "default": "NotFoundError"
                    },
                    "message": {
                        "type": "string",
                        "default": "Item not found!"
                    }
                },
                "type": "object"
            },
            "DatabaseError": {
                "properties": {
                    "error": {
                        "type": "string",
                        "default": "DatabaseError"
                    },
                    "messages": {
                        "type": "string",
                        "default": "Something went wrong, please try again later!"
                    }
                },
                "type": "object"
            },
            "LaravelPagination": {
                "properties": {
                    "total": {
                        "type": "integer"
                    },
                    "current_page": {
                        "type": "integer"
                    },
                    "from": {
                        "type": "integer"
                    },
                    "to": {
                        "type": "integer"
                    },
                    "per_page": {
                        "type": "integer"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "first_page_url": {
                        "type": "string",
                        "format": "url"
                    },
                    "next_page_url": {
                        "type": "string",
                        "format": "url"
                    },
                    "prev_page_url": {
                        "type": "string",
                        "format": "url"
                    },
                    "last_page_url": {
                        "type": "string",
                        "format": "url"
                    },
                    "path": {
                        "type": "string",
                        "format": "url"
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "CategoryListingResponse": {
                "description": "Category Listing",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Category"
                                    }
                                }
                            },
                            "type": "object",
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/LaravelPagination"
                                }
                            ]
                        }
                    }
                }
            },
            "JobListingResponse": {
                "description": "Job Listing",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Job"
                                    }
                                }
                            },
                            "type": "object",
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/LaravelPagination"
                                }
                            ]
                        }
                    }
                }
            },
            "JobEntityResponse": {
                "description": "Job Entity",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Job"
                        }
                    }
                }
            },
            "ZipCodeListingResponse": {
                "description": "ZipCode Listing",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ZipCode"
                                    }
                                }
                            },
                            "type": "object",
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/LaravelPagination"
                                }
                            ]
                        }
                    }
                }
            },
            "ValidationErrorResponse": {
                "description": "some errors in your request",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ValidationError"
                        }
                    }
                }
            },
            "NotFoundErrorResponse": {
                "description": "item is not found",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/NotFoundError"
                        }
                    }
                }
            },
            "DatabaseErrorResponse": {
                "description": "something went wrong with database connection!",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/DatabaseError"
                        }
                    }
                }
            }
        },
        "parameters": {
            "category_with": {
                "name": "with",
                "in": "query",
                "description": "define relations to fetch with the original resource",
                "required": false,
                "style": "deepObject",
                "explode": true,
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "jobs"
                        ]
                    }
                }
            },
            "job_with": {
                "name": "with",
                "in": "query",
                "description": "define relations to fetch with the original resource",
                "required": false,
                "style": "deepObject",
                "explode": true,
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "category",
                            "zipCode",
                            "zipCode.city"
                        ]
                    }
                }
            },
            "zipcode_with": {
                "name": "with",
                "in": "query",
                "description": "define relations to fetch with the original resource",
                "style": "deepObject",
                "explode": true,
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "city",
                            "jobs"
                        ]
                    }
                }
            },
            "ID": {
                "name": "id",
                "in": "path",
                "description": "resource id",
                "required": true,
                "schema": {
                    "type": "integer"
                }
            },
            "paginate": {
                "name": "paginate",
                "in": "query",
                "description": "Enable/Disable pagination, Default: enabled",
                "required": false,
                "schema": {
                    "type": "boolean"
                }
            },
            "per_page": {
                "name": "per_page",
                "in": "query",
                "description": "number of items per page, Default: 10",
                "required": false,
                "schema": {
                    "type": "integer"
                }
            },
            "page": {
                "name": "page",
                "in": "query",
                "description": "current page",
                "required": false,
                "schema": {
                    "type": "integer"
                }
            },
            "conditions": {
                "name": "conditions",
                "in": "query",
                "description": "Retrieve only resources that match defined conditions. <br>format: conditions[attr_name:operator]=whatever <br>Current allowed operators: eq, gt, in <br><b>Note that you will need to remove OrderedMap if you are going to edit this field</b>",
                "required": false,
                "style": "deepObject",
                "explode": true,
                "schema": {
                    "type": "object",
                    "example": {
                        "id:in": "2,4"
                    }
                }
            },
            "query": {
                "name": "query",
                "in": "query",
                "description": "search the resource by its main key.<br>Note that main key changes from entity to another",
                "required": false,
                "schema": {
                    "type": "string"
                }
            }
        },
        "requestBodies": {
            "StoreOrUpdateJobRequestBody": {
                "description": "store or update job request body",
                "required": true,
                "content": {
                    "application/x-www-form-urlencoded": {
                        "schema": {
                            "$ref": "#/components/schemas/StoreOrUpdateJob"
                        }
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Category Entity",
            "description": "All operations related to category/service entity"
        },
        {
            "name": "Job Entity",
            "description": "All operations related to job entity"
        },
        {
            "name": "ZipCode Entity",
            "description": "All operations related to zip code entity"
        }
    ]
}